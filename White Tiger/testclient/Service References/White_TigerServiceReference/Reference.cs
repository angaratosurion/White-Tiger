//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace testclient.White_TigerServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="White_TigerServiceReference.IWhiteTigerService")]
    public interface IWhiteTigerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWhiteTigerService/Login", ReplyAction="http://tempuri.org/IWhiteTigerService/LoginResponse")]
        bool Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWhiteTigerService/CreateDataBase", ReplyAction="http://tempuri.org/IWhiteTigerService/CreateDataBaseResponse")]
        void CreateDataBase(string username, string pass, string dbname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWhiteTigerService/CreateTable", ReplyAction="http://tempuri.org/IWhiteTigerService/CreateTableResponse")]
        void CreateTable(string root, string recordtag, string username, string pass, string dbname, string tablename, System.Collections.Generic.List<string> TableCells);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWhiteTigerService/LoadTable", ReplyAction="http://tempuri.org/IWhiteTigerService/LoadTableResponse")]
        string LoadTable(string recordtag, string username, string pass, string dbname, string table);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWhiteTigerService/UpdateTable", ReplyAction="http://tempuri.org/IWhiteTigerService/UpdateTableResponse")]
        void UpdateTable(string root, string recordtag, string username, string pass, string dbname, string table);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWhiteTigerService/Encrypt", ReplyAction="http://tempuri.org/IWhiteTigerService/EncryptResponse")]
        void Encrypt(string root, string recordtag, string username, string dbname, string table, System.Collections.Generic.List<System.Collections.Generic.List<object>> rows, string pass, Hydrobase.Cryptography.CryptograhyAlgorithm alg, Hydrobase.Cryptography.HashingAlogrithm hashalg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWhiteTigerService/Decrypt", ReplyAction="http://tempuri.org/IWhiteTigerService/DecryptResponse")]
        System.Collections.Generic.List<System.Collections.Generic.List<object>> Decrypt(string root, string recordtag, string username, string dbname, string table, string pass, Hydrobase.Cryptography.CryptograhyAlgorithm alg, Hydrobase.Cryptography.HashingAlogrithm hashalg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWhiteTigerService/Backup", ReplyAction="http://tempuri.org/IWhiteTigerService/BackupResponse")]
        void Backup(string username, string dbname, string table, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWhiteTigerService/GetVersion", ReplyAction="http://tempuri.org/IWhiteTigerService/GetVersionResponse")]
        string GetVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWhiteTigerService/Find", ReplyAction="http://tempuri.org/IWhiteTigerService/FindResponse")]
        string Find(string username, string pass, string dbname, string table, string cell, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWhiteTigerService/FindTable", ReplyAction="http://tempuri.org/IWhiteTigerService/FindTableResponse")]
        System.Data.DataTable FindTable(string username, string pass, string tablename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWhiteTigerService/AddRow", ReplyAction="http://tempuri.org/IWhiteTigerService/AddRowResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<System.Collections.Generic.List<object>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Hydrobase.Cryptography.CryptograhyAlgorithm))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Hydrobase.Cryptography.HashingAlogrithm))]
        void AddRow(string username, string pass, string dbname, string table, System.Collections.Generic.List<object> vals, bool autoupd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWhiteTigerService/AddRows", ReplyAction="http://tempuri.org/IWhiteTigerService/AddRowsResponse")]
        void AddRows(string username, string pass, string dbname, string table, System.Collections.Generic.List<System.Collections.Generic.List<object>> vals, bool autoaupd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWhiteTigerService/RemoveRow", ReplyAction="http://tempuri.org/IWhiteTigerService/RemoveRowResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<System.Collections.Generic.List<object>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Hydrobase.Cryptography.CryptograhyAlgorithm))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Hydrobase.Cryptography.HashingAlogrithm))]
        void RemoveRow(string username, string pass, string dbname, string table, System.Collections.Generic.List<object> primkeys);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWhiteTigerService/ListDatabases", ReplyAction="http://tempuri.org/IWhiteTigerService/ListDatabasesResponse")]
        System.Collections.Generic.List<string> ListDatabases(string username, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWhiteTigerService/ListTables", ReplyAction="http://tempuri.org/IWhiteTigerService/ListTablesResponse")]
        System.Collections.Generic.List<string> ListTables(string username, string pass, string dbname);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWhiteTigerServiceChannel : testclient.White_TigerServiceReference.IWhiteTigerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WhiteTigerServiceClient : System.ServiceModel.ClientBase<testclient.White_TigerServiceReference.IWhiteTigerService>, testclient.White_TigerServiceReference.IWhiteTigerService {
        
        public WhiteTigerServiceClient() {
        }
        
        public WhiteTigerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WhiteTigerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WhiteTigerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WhiteTigerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public void CreateDataBase(string username, string pass, string dbname) {
            base.Channel.CreateDataBase(username, pass, dbname);
        }
        
        public void CreateTable(string root, string recordtag, string username, string pass, string dbname, string tablename, System.Collections.Generic.List<string> TableCells) {
            base.Channel.CreateTable(root, recordtag, username, pass, dbname, tablename, TableCells);
        }
        
        public string LoadTable(string recordtag, string username, string pass, string dbname, string table) {
            return base.Channel.LoadTable(recordtag, username, pass, dbname, table);
        }
        
        public void UpdateTable(string root, string recordtag, string username, string pass, string dbname, string table) {
            base.Channel.UpdateTable(root, recordtag, username, pass, dbname, table);
        }
        
        public void Encrypt(string root, string recordtag, string username, string dbname, string table, System.Collections.Generic.List<System.Collections.Generic.List<object>> rows, string pass, Hydrobase.Cryptography.CryptograhyAlgorithm alg, Hydrobase.Cryptography.HashingAlogrithm hashalg) {
            base.Channel.Encrypt(root, recordtag, username, dbname, table, rows, pass, alg, hashalg);
        }
        
        public System.Collections.Generic.List<System.Collections.Generic.List<object>> Decrypt(string root, string recordtag, string username, string dbname, string table, string pass, Hydrobase.Cryptography.CryptograhyAlgorithm alg, Hydrobase.Cryptography.HashingAlogrithm hashalg) {
            return base.Channel.Decrypt(root, recordtag, username, dbname, table, pass, alg, hashalg);
        }
        
        public void Backup(string username, string dbname, string table, string pass) {
            base.Channel.Backup(username, dbname, table, pass);
        }
        
        public string GetVersion() {
            return base.Channel.GetVersion();
        }
        
        public string Find(string username, string pass, string dbname, string table, string cell, string value) {
            return base.Channel.Find(username, pass, dbname, table, cell, value);
        }
        
        public System.Data.DataTable FindTable(string username, string pass, string tablename) {
            return base.Channel.FindTable(username, pass, tablename);
        }
        
        public void AddRow(string username, string pass, string dbname, string table, System.Collections.Generic.List<object> vals, bool autoupd) {
            base.Channel.AddRow(username, pass, dbname, table, vals, autoupd);
        }
        
        public void AddRows(string username, string pass, string dbname, string table, System.Collections.Generic.List<System.Collections.Generic.List<object>> vals, bool autoaupd) {
            base.Channel.AddRows(username, pass, dbname, table, vals, autoaupd);
        }
        
        public void RemoveRow(string username, string pass, string dbname, string table, System.Collections.Generic.List<object> primkeys) {
            base.Channel.RemoveRow(username, pass, dbname, table, primkeys);
        }
        
        public System.Collections.Generic.List<string> ListDatabases(string username, string pass) {
            return base.Channel.ListDatabases(username, pass);
        }
        
        public System.Collections.Generic.List<string> ListTables(string username, string pass, string dbname) {
            return base.Channel.ListTables(username, pass, dbname);
        }
    }
}
